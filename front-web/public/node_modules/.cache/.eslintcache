[{"C:\\Users\\rodri\\Documents\\Estudos Dev Java\\dscatalog\\front-web\\src\\index.tsx":"1","C:\\Users\\rodri\\Documents\\Estudos Dev Java\\dscatalog\\front-web\\src\\App.tsx":"2","C:\\Users\\rodri\\Documents\\Estudos Dev Java\\dscatalog\\front-web\\src\\core\\components\\NavBar\\index.tsx":"3","C:\\Users\\rodri\\Documents\\Estudos Dev Java\\dscatalog\\front-web\\src\\Routess.tsx":"4","C:\\Users\\rodri\\Documents\\Estudos Dev Java\\dscatalog\\front-web\\src\\core\\pages\\Catalog\\index.tsx":"5","C:\\Users\\rodri\\Documents\\Estudos Dev Java\\dscatalog\\front-web\\src\\core\\pages\\Admin\\index.tsx":"6","C:\\Users\\rodri\\Documents\\Estudos Dev Java\\dscatalog\\front-web\\src\\core\\pages\\Home\\index.tsx":"7","C:\\Users\\rodri\\Documents\\Estudos Dev Java\\dscatalog\\front-web\\src\\core\\components\\ButtonIcon\\index.tsx":"8","C:\\Users\\rodri\\Documents\\Estudos Dev Java\\dscatalog\\front-web\\src\\core\\pages\\Catalog\\components\\ProductCard\\index.tsx":"9","C:\\Users\\rodri\\Documents\\Estudos Dev Java\\dscatalog\\front-web\\src\\core\\pages\\Catalog\\components\\ProductDetails\\index.tsx":"10","C:\\Users\\rodri\\Documents\\Estudos Dev Java\\dscatalog\\front-web\\src\\core\\components\\ProductPrice\\index.tsx":"11","C:\\Users\\rodri\\Documents\\Estudos Dev Java\\dscatalog\\front-web\\src\\core\\utils\\request.ts":"12","C:\\Users\\rodri\\Documents\\Estudos Dev Java\\dscatalog\\front-web\\src\\core\\pages\\Catalog\\components\\Loaders\\ProductCardLoader.tsx":"13","C:\\Users\\rodri\\Documents\\Estudos Dev Java\\dscatalog\\front-web\\src\\core\\pages\\Catalog\\components\\Loaders\\ProductInfoLoader.tsx":"14","C:\\Users\\rodri\\Documents\\Estudos Dev Java\\dscatalog\\front-web\\src\\core\\pages\\Catalog\\components\\Loaders\\ProductDescriptionLoader.tsx":"15","C:\\Users\\rodri\\Documents\\Estudos Dev Java\\dscatalog\\front-web\\src\\core\\utils\\list.ts":"16","C:\\Users\\rodri\\Documents\\Estudos Dev Java\\dscatalog\\front-web\\src\\core\\components\\Pagination\\index.tsx":"17","C:\\Users\\rodri\\Documents\\Estudos Dev Java\\dscatalog\\front-web\\src\\core\\pages\\Admin\\components\\NavBar\\index.tsx":"18"},{"size":151,"mtime":1645477171158,"results":"19","hashOfConfig":"20"},{"size":221,"mtime":1639493287732,"results":"21","hashOfConfig":"20"},{"size":1118,"mtime":1643811967129,"results":"22","hashOfConfig":"20"},{"size":988,"mtime":1643896662791,"results":"23","hashOfConfig":"20"},{"size":2326,"mtime":1677606632393,"results":"24","hashOfConfig":"20"},{"size":311,"mtime":1683521433027,"results":"25","hashOfConfig":"20"},{"size":989,"mtime":1643811930850,"results":"26","hashOfConfig":"20"},{"size":525,"mtime":1642599791918,"results":"27","hashOfConfig":"20"},{"size":751,"mtime":1646316608004,"results":"28","hashOfConfig":"20"},{"size":3307,"mtime":1654642320515,"results":"29","hashOfConfig":"20"},{"size":513,"mtime":1646331728137,"results":"30","hashOfConfig":"20"},{"size":439,"mtime":1645476886308,"results":"31","hashOfConfig":"20"},{"size":637,"mtime":1654626397562,"results":"32","hashOfConfig":"20"},{"size":511,"mtime":1654624365805,"results":"33","hashOfConfig":"20"},{"size":651,"mtime":1654624352435,"results":"34","hashOfConfig":"20"},{"size":98,"mtime":1654625983566,"results":"35","hashOfConfig":"20"},{"size":1366,"mtime":1677614204752,"results":"36","hashOfConfig":"20"},{"size":561,"mtime":1677766735373,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"13i6rqq",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\rodri\\Documents\\Estudos Dev Java\\dscatalog\\front-web\\src\\index.tsx",[],["78","79"],"C:\\Users\\rodri\\Documents\\Estudos Dev Java\\dscatalog\\front-web\\src\\App.tsx",[],"C:\\Users\\rodri\\Documents\\Estudos Dev Java\\dscatalog\\front-web\\src\\core\\components\\NavBar\\index.tsx",[],"C:\\Users\\rodri\\Documents\\Estudos Dev Java\\dscatalog\\front-web\\src\\Routess.tsx",[],"C:\\Users\\rodri\\Documents\\Estudos Dev Java\\dscatalog\\front-web\\src\\core\\pages\\Catalog\\index.tsx",["80"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ProductCard from \"./components/ProductCard\";\r\nimport './styles.scss';\r\nimport axios from \"axios\";\r\nimport { makeRequest } from \"../../utils/request\";\r\nimport { ProductResponse } from \"../../types/Product\";\r\nimport ProductCardLoader from \"./components/Loaders/ProductCardLoader\";\r\nimport Pagination from \"core/components/Pagination\";\r\n\r\nconst Catalog = () => {\r\n    //quando o componente iniciar, buscar a lista de produtos\r\n    //quando a lista de produtos estiver disponivel popular o um estado no componente, e listar os produtos dinamicamente.\r\n    const [productsResponse, setProductsResponse] = useState<ProductResponse>();\r\n\r\n    //criar um estado pro loader\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    //criar um estado para deixar as cores dinamicas\r\n    const [activePage, setActivePage] = useState(0);\r\n\r\n    //quando o componente iniciar, bucar a lista de produtos\r\n    useEffect(() => {\r\n        const params = {\r\n            page: activePage,\r\n            linesPerPage: 12\r\n        }\r\n\r\n        //antes de fazer a requisicao precisa iniciar o loader\r\n        setIsLoading(true);\r\n        makeRequest({ url: '/products', params })\r\n            .then(response => setProductsResponse(response.data))\r\n            .finally(() =>{\r\n                //finalizar o loader\r\n                setIsLoading(false);\r\n            })\r\n    }, [activePage]);\r\n\r\n    return (\r\n        <div className=\"catalog-container\">\r\n            <h1 className=\"catalog-title\">\r\n                Cat√°logo de produtos\r\n            </h1>   \r\n            <div className=\"catalog-products\">\r\n                {isLoading ? <ProductCardLoader /> : (productsResponse?.content.map(product => (\r\n                    <Link to={`/products/${product.id}`} key={product.id}>\r\n                        <ProductCard product={product} />\r\n                    </Link>\r\n                )))}\r\n            </div>\r\n            {productsResponse && (\r\n                <Pagination \r\n                    totalPages={productsResponse.totalPages}\r\n                    activePage={activePage}\r\n                    onChange={page => setActivePage(page)}\r\n                    />\r\n                 )}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Catalog;","C:\\Users\\rodri\\Documents\\Estudos Dev Java\\dscatalog\\front-web\\src\\core\\pages\\Admin\\index.tsx",[],"C:\\Users\\rodri\\Documents\\Estudos Dev Java\\dscatalog\\front-web\\src\\core\\pages\\Home\\index.tsx",[],"C:\\Users\\rodri\\Documents\\Estudos Dev Java\\dscatalog\\front-web\\src\\core\\components\\ButtonIcon\\index.tsx",[],"C:\\Users\\rodri\\Documents\\Estudos Dev Java\\dscatalog\\front-web\\src\\core\\pages\\Catalog\\components\\ProductCard\\index.tsx",[],"C:\\Users\\rodri\\Documents\\Estudos Dev Java\\dscatalog\\front-web\\src\\core\\pages\\Catalog\\components\\ProductDetails\\index.tsx",["81","82"],"import { type } from \"os\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport './styles.scss';\r\nimport { ReactComponent as ArrowIcon } from '../../../../assets/images/arrow.svg'\r\nimport { ReactComponent as ProductImage } from '../../../../assets/images/product.svg'\r\nimport { Link } from \"react-router-dom\";\r\nimport { Product } from \"../../../../types/Product\";\r\nimport ProductPrice from \"../../../../components/ProductPrice\";\r\nimport { makeRequest } from \"../../../../utils/request\";\r\nimport ProductInfoLoader from \"../Loaders/ProductInfoLoader\";\r\nimport ProductDescriptionLoader from \"../Loaders/ProductDescriptionLoader\";\r\n\r\ntype ParamsType = {\r\n    productId: string;\r\n}\r\n\r\n\r\nconst ProductDetails = () => {\r\n    const { productId } = useParams<ParamsType>();\r\n    const [product, setProduct] = useState<Product>();\r\n\r\n    //criar um estado pro loader\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    //Quando o componente iniciar buscar as infos do produto - usar UseEffect para quando iniciar \r\n    //como dependecia do use effect ficaria dentro do arrey - como nao tem fica o array vazio\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        //utilizar a funcao criada makerequest para chamar o request - e passar uma URL do recurso que quer ser acessado\r\n        //colcar como o que passamos como variavel no make request como dependencia do useEffect\r\n        makeRequest({ url: `/products/${productId}` })\r\n            .then(response => setProduct(response.data))\r\n            .finally(() => setIsLoading(false));\r\n    }, [productId]);\r\n\r\n    return (\r\n        <div className=\"product-details-container\">\r\n            <div className=\"card-base border-radius-20 product-details\">\r\n                <Link to=\"/products\" className=\"produc-details-goback\">\r\n                    <ArrowIcon className=\"icon-goback\" />\r\n                    <h1 className=\"text-goback\">VOLTAR</h1>\r\n                </Link>\r\n                <div className=\"row\">\r\n                    <div className=\"col-6 pr-5\">\r\n                        {isLoading ? <ProductInfoLoader /> : (<>\r\n                            <div className=\"product-details-card text-center\">\r\n                                <img src={product?.imgUrl} alt={product?.name} className=\"product-details-image\" />\r\n                            </div>\r\n                            <h1 className=\"product-details-name\">\r\n                                {product?.name}\r\n                            </h1>\r\n                            {product?.price && <ProductPrice price={product?.price} />}\r\n                        </>)}\r\n                    </div>\r\n\r\n                    <div className=\"col-6 product-details-card\">\r\n                        {isLoading ? <ProductDescriptionLoader /> : (\r\n                            <>\r\n                                <h1 className=\"product-description-title\">Descricao do produto</h1>\r\n                                <p className=\"product-description-text\">\r\n                                    {product?.description}\r\n                                </p>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductDetails;","C:\\Users\\rodri\\Documents\\Estudos Dev Java\\dscatalog\\front-web\\src\\core\\components\\ProductPrice\\index.tsx",[],"C:\\Users\\rodri\\Documents\\Estudos Dev Java\\dscatalog\\front-web\\src\\core\\utils\\request.ts",["83"],"import axios, {Method} from \"axios\";\r\nimport { url } from \"inspector\";\r\n\r\ntype RequestParams = {\r\n    method?: Method;\r\n    url: string;\r\n    data?: object;\r\n    params?: object;\r\n}\r\n\r\nconst BASE_URL = 'http://localhost:3000'\r\n\r\nexport const makeRequest = ( {method = 'GET', url, data, params}: RequestParams ) => {\r\n    return axios ({\r\n        method,\r\n        url: `${BASE_URL}${url}`,\r\n        data,\r\n        params\r\n    });\r\n\r\n    \r\n}","C:\\Users\\rodri\\Documents\\Estudos Dev Java\\dscatalog\\front-web\\src\\core\\pages\\Catalog\\components\\Loaders\\ProductCardLoader.tsx",[],"C:\\Users\\rodri\\Documents\\Estudos Dev Java\\dscatalog\\front-web\\src\\core\\pages\\Catalog\\components\\Loaders\\ProductInfoLoader.tsx",[],"C:\\Users\\rodri\\Documents\\Estudos Dev Java\\dscatalog\\front-web\\src\\core\\pages\\Catalog\\components\\Loaders\\ProductDescriptionLoader.tsx",[],"C:\\Users\\rodri\\Documents\\Estudos Dev Java\\dscatalog\\front-web\\src\\core\\utils\\list.ts",[],"C:\\Users\\rodri\\Documents\\Estudos Dev Java\\dscatalog\\front-web\\src\\core\\components\\Pagination\\index.tsx",[],"C:\\Users\\rodri\\Documents\\Estudos Dev Java\\dscatalog\\front-web\\src\\core\\pages\\Admin\\components\\NavBar\\index.tsx",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":5,"column":8,"nodeType":"90","messageId":"91","endLine":5,"endColumn":13},{"ruleId":"88","severity":1,"message":"92","line":1,"column":10,"nodeType":"90","messageId":"91","endLine":1,"endColumn":14},{"ruleId":"88","severity":1,"message":"93","line":6,"column":28,"nodeType":"90","messageId":"91","endLine":6,"endColumn":40},{"ruleId":"88","severity":1,"message":"94","line":2,"column":10,"nodeType":"90","messageId":"91","endLine":2,"endColumn":13},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"@typescript-eslint/no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'type' is defined but never used.","'ProductImage' is defined but never used.","'url' is defined but never used.","no-global-assign","no-unsafe-negation"]