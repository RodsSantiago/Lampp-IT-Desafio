{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rodri\\\\Documents\\\\Estudos Dev Java\\\\dscatalog\\\\front-web\\\\src\\\\core\\\\components\\\\Pagination\\\\index.tsx\";\nimport React from \"react\";\nimport './styles.scss';\nimport { ReactComponent as ArrowIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!core/assets/images/arrow.svg\";\nimport { generateList } from \"core/utils/list\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pagination = ({\n  totalPages,\n  activePage,\n  onChange\n}) => {\n  //gerar os itens da paginacao de forma dinamica\n  const items = generateList(totalPages);\n  const previousClass = totalPages > 0 && activePage > 0 ? 'page-active' : 'page-inactive';\n  const nextClass = activePage + 1 < totalPages ? 'page-active' : 'page-inactive';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagination-container\",\n    children: [/*#__PURE__*/_jsxDEV(ArrowIcon, {\n      className: `pagination-previous ${previousClass}`,\n      onClick: () => onChange(activePage - 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `pagination-item ${item === activePage ? 'active' : ''}`,\n      onClick: () => onChange(item),\n      children: item + 1\n    }, item, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(ArrowIcon, {\n      className: `pagination-next ${nextClass}`,\n      onClick: () => onChange(activePage + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["C:/Users/rodri/Documents/Estudos Dev Java/dscatalog/front-web/src/core/components/Pagination/index.tsx"],"names":["React","generateList","Pagination","totalPages","activePage","onChange","items","previousClass","nextClass","map","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;;AAEA,SAASC,YAAT,QAA6B,iBAA7B;;;AAQA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,UAAD;AAAaC,EAAAA,UAAb;AAAyBC,EAAAA;AAAzB,CAAD,KAAgD;AAC/D;AACA,QAAMC,KAAK,GAAGL,YAAY,CAACE,UAAD,CAA1B;AACA,QAAMI,aAAa,GAAGJ,UAAU,GAAG,CAAb,IAAkBC,UAAU,GAAG,CAA/B,GAAmC,aAAnC,GAAmD,eAAzE;AACA,QAAMI,SAAS,GAAIJ,UAAU,GAAG,CAAd,GAAmBD,UAAnB,GAAgC,aAAhC,GAAgD,eAAlE;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,4BACI,QAAC,SAAD;AACC,MAAA,SAAS,EAAG,uBAAsBI,aAAc,EADjD;AAEC,MAAA,OAAO,EAAE,MAAMF,QAAQ,CAACD,UAAU,GAAG,CAAd;AAFxB;AAAA;AAAA;AAAA;AAAA,YADJ,EAKGE,KAAK,CAACG,GAAN,CAAUC,IAAI,iBACb;AAEA,MAAA,SAAS,EAAK,mBAAkBA,IAAI,KAAKN,UAAT,GAAsB,QAAtB,GAAiC,EAAG,EAFpE;AAGA,MAAA,OAAO,EAAI,MAAMC,QAAQ,CAACK,IAAD,CAHzB;AAAA,gBAKKA,IAAI,GAAG;AALZ,OACKA,IADL;AAAA;AAAA;AAAA;AAAA,YADD,CALH,eAcI,QAAC,SAAD;AACA,MAAA,SAAS,EAAG,mBAAkBF,SAAU,EADxC;AAEA,MAAA,OAAO,EAAE,MAAMH,QAAQ,CAACD,UAAU,GAAG,CAAd;AAFvB;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CA5BD;;KAAMF,U;AA8BN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\r\nimport './styles.scss';\r\nimport { ReactComponent as ArrowIcon } from 'core/assets/images/arrow.svg'\r\nimport { generateList } from \"core/utils/list\";\r\n\r\ntype Props = {\r\n    totalPages: number;\r\n    activePage: number;\r\n    onChange: (item: number) => void ;\r\n}\r\n\r\nconst Pagination = ({totalPages, activePage, onChange}: Props)  => {\r\n    //gerar os itens da paginacao de forma dinamica\r\n    const items = generateList(totalPages);\r\n    const previousClass = totalPages > 0 && activePage > 0 ? 'page-active' : 'page-inactive'\r\n    const nextClass = (activePage + 1) < totalPages ? 'page-active' : 'page-inactive'\r\n\r\n    return(\r\n        <div className=\"pagination-container\">\r\n            <ArrowIcon\r\n             className={`pagination-previous ${previousClass}`}\r\n             onClick={() => onChange(activePage - 1)}\r\n             />\r\n          {items.map(item => (\r\n            <div\r\n            key={item}\r\n            className = {`pagination-item ${item === activePage ? 'active' : ''}`}\r\n            onClick = {() => onChange(item)}\r\n            >\r\n                {item + 1}\r\n                </div>   \r\n          ))}\r\n            <ArrowIcon \r\n            className={`pagination-next ${nextClass}`} \r\n            onClick={() => onChange(activePage + 1)}\r\n            />\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default Pagination;"]},"metadata":{},"sourceType":"module"}